name: Cargo Build & Test

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    name: Build and test on linux
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository_owner }}/lukaj-test:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
    steps:
      - uses: actions/checkout@v3
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo build --all-features --verbose
      - run: cargo test --all-features --verbose
      - uses: actions/upload-artifact@v3
        with:
          name: artifacts linux ${{ matrix.toolchain }}
          path: target/tmp/*
          retention-days: 7
          if-no-files-found: error

  build-and-test-win:
    name: Build and test on windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          location: D:\
          update: true
          install : >-
            mingw-w64-x86_64-gtk4
            mingw-w64-x86_64-gettext
            mingw-w64-x86_64-libxml2
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-SDL2
      - run: rustup update stable-gnu && rustup default stable-gnu
      - shell: bash
        run: |
          echo "D:/msys64/mingw64/bin" >> $GITHUB_PATH
      - run: |
          cargo build --all-features --verbose
      - run: cargo test --all-features --verbose
      - uses: actions/upload-artifact@v3
        with:
          name: artifacts windows
          path: target/tmp/*
          retention-days: 7
          if-no-files-found: error

  publish:
    name: Publish release
    needs:
    - build-and-test
    - build-and-test-win
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository_owner }}/lukaj-test:latest
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.github_token }}
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - name: Push to crates.io
      run: cargo publish --all-features
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
